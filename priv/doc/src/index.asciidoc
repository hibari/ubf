// -*- Doc -*-
// vim: set syntax=asciidoc:

= UBF 2.1 Home Page
Joseph Wayne Norton <norton@alum.mit.edu>
:Author Initials: JWN
:title: Universal Binary Format
:description: UBF 2.1 Home Page
:footer: Functional programming for the better good!
:brand: UBF
:brandref: https://github.com/ubf
:doctype: article
:toc2:
:data-uri:
:backend: bootstrap-docs
:link-assets:
:glyphicons: http://glyphicons.com[Glyphicons]

== Introduction

UBF is a framework that permits Erlang and the outside world to talk
with each other.  The documentation and the corresponding open-source
code repositories are based on Joe Armstrong's original UBF site and
code with an MIT license file added to the distribution.  Since then,
a large number of enhancements and improvements have been added.

UBF is a language for transporting and describing complex data
structures across a network.  It has three components:

- UBF(a) is a "language neutral" data transport format, roughly
  equivalent to well-formed XML.

- UBF(b) is a programming langauge for describing types in UBF(a) and
  protocols between clients and servers.  This layer is typically
  called the "protocol contract".  UBF(b) is roughly equivalent to
  Verified XML, XML-schemas, SOAP and WDSL.

- UBF(c) is a meta-level protocol used between a UBF client and a UBF
  server.

_UBF is intended for production deployment and is deployed in
"24x7x365" carrier-grade systems._

== Documentation

The link:http://github.com/ubf/ubf[UBF GitHub README] is a good first
step to get started quickly.  Check the download, build, and install
instructions.

Reading the link:ubf-user-guide.en.html[UBF 2.1 User's Guide] is
_STRONGLY_ recommended.
